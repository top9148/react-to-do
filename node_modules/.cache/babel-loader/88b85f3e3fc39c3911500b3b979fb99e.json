{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeonghoon/IdeaProjects/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useRef } from 'react';\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링해 보기',\n    checked: true\n  }, {\n    id: 3,\n    text: '일정 관리 앱 만들어 보기',\n    checked: false\n  }]); // 고유값으로 사용될 ID\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"WgQTMz1vgJtB31D6B5afOnzu76Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jeonghoon/IdeaProjects/todo-app/src/App.js"],"names":["React","useState","useCallback","useRef","TodoTemplate","TodoInsert","TodoList","App","todos","setTodos","id","text","checked","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANiC,EAWjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXiC,CAAD,CAAlC,CADgB,CAmBhB;AACA;;AACA,QAAMC,MAAM,GAAGV,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMW,QAAQ,GAAGZ,WAAW,CACxBS,IAAI,IAAI;AACN,UAAMI,IAAI,GAAG;AACXL,MAAAA,EAAE,EAAEG,MAAM,CAACG,OADA;AAEXL,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAH,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB,CAPM,CAOe;AACtB,GATuB,EAUxB,CAACR,KAAD,CAVwB,CAA5B;AAaA,QAAMU,QAAQ,GAAGhB,WAAW,CACxBQ,EAAE,IAAI;AACJD,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHuB,EAIxB,CAACF,KAAD,CAJwB,CAA5B;AAOA,QAAMY,QAAQ,GAAGlB,WAAW,CACxBQ,EAAE,IAAI;AACJD,IAAAA,QAAQ,CACJD,KAAK,CAACa,GAAN,CAAUN,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGK,IAAJ;AAAUH,MAAAA,OAAO,EAAE,CAACG,IAAI,CAACH;AAAzB,KAAjB,GAAqDG,IAAvE,CADI,CAAR;AAGD,GALuB,EAMxB,CAACP,KAAD,CANwB,CAA5B;AASA,sBACA,QAAC,YAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAwB,MAAA,QAAQ,EAAEU,QAAlC;AAA4C,MAAA,QAAQ,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMD,CA1DD;;GAAMb,G;;KAAAA,G;AA4DN,eAAeA,GAAf","sourcesContent":["import React, {useState, useCallback, useRef} from 'react';\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true\n    },\n    {\n      id: 3,\n      text: '일정 관리 앱 만들어 보기',\n      checked: false\n    }\n  ]);\n\n  // 고유값으로 사용될 ID\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n      text => {\n        const todo = {\n          id: nextId.current,\n          text,\n          checked: false\n        };\n        setTodos(todos.concat(todo));\n        nextId.current += 1; // nextId 1씩 더하기\n      },\n      [todos],\n  );\n\n  const onRemove = useCallback(\n      id => {\n        setTodos(todos.filter(todo => todo.id !== id));\n      },\n      [todos]\n  );\n\n  const onToggle = useCallback(\n      id => {\n        setTodos(\n            todos.map(todo => todo.id === id ? {...todo, checked: !todo.checked} : todo)\n        );\n      },\n      [todos]\n  )\n\n  return(\n  <TodoTemplate>\n    <TodoInsert onInsert={onInsert}/>\n    <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n  </TodoTemplate>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}